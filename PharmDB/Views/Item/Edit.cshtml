@model PharmDB.Models.Item

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Item</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Image1, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @if (Model.Image1 != null)
                {
                    <img src="data:image;base64,@System.Convert.ToBase64String( Model.Image1)" style="height: 100px; width: 100px" />
                }
                <input type="file" name="Image1" class="input-files" />
                <input type="checkbox" name="DImage1" value="true" class="input-files" /> <p>Check to Update the Picture</p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image2, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @if (Model.Image2 != null)
                {
                    <img src="data:image;base64,@System.Convert.ToBase64String( Model.Image2)" style="height: 100px; width: 100px" />
                }
               <input type="file" name="Image2" class="input-files" />
                <input type="checkbox" name="DImage2" value="true" class="input-files" /> <p>Check to Update the Picture</p>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            @Html.LabelFor(model => model.Manufacturer, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Manufacturer)
                @Html.ValidationMessageFor(model => model.Manufacturer)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Size)
                @Html.ValidationMessageFor(model => model.Size)
            </div>
            @Html.LabelFor(model => model.Source, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Source)
                @Html.ValidationMessageFor(model => model.Source)
            </div>
        </div>



        <div class="form-group">
            @Html.Label("Value: $", new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Value)
                @Html.ValidationMessageFor(model => model.Value)
            </div>
            @Html.Label("Value Source", new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.ValueSource)
                @Html.ValidationMessageFor(model => model.ValueSource)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Qauntity, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Qauntity)
                @Html.ValidationMessageFor(model => model.Qauntity)
            </div>

            @Html.LabelFor(model => model.StoredLocation, new { @class = "control-label col-sm-2" })
            <div class=" col-sm-3">
                @Html.EditorFor(model => model.StoredLocation)
                @Html.ValidationMessageFor(model => model.StoredLocation)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.TextAreaFor(model => model.Comments, new { @rows = 10, @style = "width: 100%" })
                @Html.ValidationMessageFor(model => model.Comments)
            </div>
            @Html.LabelFor(model => model.Descritption, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.TextAreaFor(model => model.Descritption, new { @rows = 10, @style = "width: 100%" })
                @Html.ValidationMessageFor(model => model.Descritption)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.tags, new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.tags)
                @Html.ValidationMessageFor(model => model.tags)
            </div>
            <div class="col-sm-4"><p style="color:#ffffff"> Tags must be seperated by commas and end with a period</p></div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index", "Item")" class="MyLink"> Go Back to list </a> 
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
