@model PharmDB.Models.Item

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>



<script language="javascript" type="text/javascript">
    function GetSecondCat(FirstCat) {
        
        $('#tags').val(FirstCat);

        //alert($('#tags').val());
        $("#sc").empty();
        $("#sc").append($('<option></option>').val("").html("---Second Category---"));
        $("#t1c").empty();
        $("#t1c").append($('<option></option>').val("").html("---Third Category---"));
        $("#t2c").empty();
        $("#t2c").append($('<option></option>').val("").html("---Fourth Category---"));
        
        $.ajax(
            {
                url: "FilterN",
                data: JSON.stringify({ 'filter': FirstCat }),
                type: "Post",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                   $.each(data, function () {
                      $("#sc").append($('<option></option>').val(this.Text).html(this.Text));
                    });
                },
                failure: function () {
                    alert("Something went wrong")
                }
            }
            );
        $.ajax(
            {
                url: "FilterD",
                data: JSON.stringify({ 'filter': FirstCat }),
                type: "Post",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    document.getElementById("rules").innerHTML= data
                },
                failure: function () {
                    alert("Something went wrong")
                }
            }
            );
        
    }
    function GetThirdCat(SecondCat) {
        document.getElementById('tags').value += (document.getElementById('fc').value + "," + SecondCat)
        $("#t1c").empty();
        $("#t1c").append($('<option></option>').val("").html("---Third Category---"))
        $("#t2c").empty();
        $("#t2c").append($('<option></option>').val("").html("---Fourth Category---"))
        $.ajax(
            {
                url: "FilterN",
                data: JSON.stringify({ 'filter': SecondCat }),
                type: "Post",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function () {
                        $("#t1c").append($('<option></option>').val(this.Text).html(this.Text));
                    });
                },
                failure: function () {
                    alert("Something went wrong")
                }
            }
            );
        $.ajax(
            {
                url: "FilterD",
                data: JSON.stringify({ 'filter': SecondCat }),
                type: "Post",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    document.getElementById("rules").innerHTML = data
                },
                failure: function () {
                    alert("Something went wrong")
                }
            }
            );
    }
    function GetFourthCat(ThirdCat) {
        document.getElementById('tags').value += (document.getElementById('fc').value + "," + document.getElementById('sc').value+ "," + ThirdCat)
        $("#t2c").empty();
        $("#t2c").append($('<option></option>').val("").html("---Fourth Category---"))
        $.ajax(
            {
                url: "FilterN",
                data: JSON.stringify({ 'filter': ThirdCat }),
                type: "Post",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function () {
                        $("#t2c").append($('<option></option>').val(this.Text).html(this.Text));
                    });
                },
                failure: function () {
                    alert("Something went wrong")
                }
            }
        );
        $.ajax(
            {
                url: "FilterD",
                data: JSON.stringify({ 'filter': ThirdCat }),
                type: "Post",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    document.getElementById("rules").innerHTML = data
                },
                failure: function () {
                    alert("Something went wrong")
                }
            }
        );
    }
   
    function SetTag(t2c) {

        //alert(tc)
        document.getElementById('tags').value = (document.getElementById('fc').value + "," + document.getElementById('sc').value + "," + document.getElementById('t1c').value + ","+ t2c)
        //alert(document.getElementById('tags').value)
    }

</script>



@using (Html.BeginForm("Create", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.tags, new { @id = "tags", Value = "emit" })
    <div class="form-horizontal">
        <h4>Item</h4>
        <hr />
        @Html.ValidationSummary(true)
        
        
        <div class="form-group">
                @Html.LabelFor(model => model.Image1, new { @class = "control-label col-sm-2" })
                <div class="col-sm-3">
                    <input type="file" name="Image1" class="input-files" />
                </div>
                @Html.LabelFor(model => model.Image2, new { @class = "control-label col-sm-2" })
                <div class="col-sm-3">
                    <input type="file" name="Image2" class="input-files" />
                </div>
            </div>
                
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            @Html.LabelFor(model => model.Manufacturer, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Manufacturer)
                @Html.ValidationMessageFor(model => model.Manufacturer)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Size)
                @Html.ValidationMessageFor(model => model.Size)
            </div>
            @Html.LabelFor(model => model.Source, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Source)
                @Html.ValidationMessageFor(model => model.Source)
            </div>
        </div>

        

        <div class="form-group">
            @Html.Label("Value: $", new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Value)
                @Html.ValidationMessageFor(model => model.Value)
            </div>
            @Html.Label("Value Source", new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.ValueSource)
                @Html.ValidationMessageFor(model => model.ValueSource)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Qauntity, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.EditorFor(model => model.Qauntity)
                @Html.ValidationMessageFor(model => model.Qauntity)
            </div>

            @Html.LabelFor(model => model.StoredLocation, new { @class = "control-label col-sm-2" })
            <div class=" col-sm-3">
                @Html.EditorFor(model => model.StoredLocation)
                @Html.ValidationMessageFor(model => model.StoredLocation)
             </div>            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.TextAreaFor(model => model.Comments, new {  @rows = 10, @style = "width: 100%"})
                @Html.ValidationMessageFor(model => model.Comments)
            </div>
            @Html.LabelFor(model => model.Descritption, new { @class = "control-label col-sm-2" })
            <div class="col-sm-3">
                @Html.TextAreaFor(model => model.Descritption, new { @rows = 10, @style = "width: 100%" })
                @Html.ValidationMessageFor(model => model.Descritption)
            </div>
        </div>
        @Html.ValidationMessageFor(model => model.tags)

        
        <div class=" form-group">
            @Html.Label("Categories", new {@class = "control-label col-sm-2" })
            <div class="col-sm-10">
                <select id="fc" onchange="javascript:GetSecondCat(this.value)">
                    <option value="">---First category---</option>
                    @if (ViewBag.CatLst != null) { 
                        foreach (var category in ViewBag.CatLst)
                        {
                            <option value=@(category.Text)>@(category.Text)</option>
                        }
                    }
                </select>
                <select id="sc" onchange="javascript:GetThirdCat(this.value)">
                    <option value="">---Second category---</option>
                </select>
                <select id="t1c" onchange="javascript:GetFourthCat(this.value)">
                    <option value="">---Third category---</option>
                </select>
                <select id="t2c" onchange="javascript:SetTag(this.value)">
                    <option value="">---Fourth category---</option>
                </select>
            </div>
        </div>
        <div class=" row">
            <div class="col-sm-4 ">
                 
            </div>
            <div class="col-sm-6">
                <h4>Category Descriptions</h4>
            </div>
        </div>
        <div class=" row">
            <pre id="rules" class=" col-sm-offset-2 col-sm-6" >@ViewBag.Description</pre>
        </div> 
        
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-1">
                <input type="submit" value="Create"  class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Item List", "Index", null,new { @class ="MyLink"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
