@using PharmDB.Models;
@model PharmDB.Models.Category

@{
    ViewBag.Title = "Create";
}

@section Scripts
{



<script language="javascript" type="text/javascript">
    function GetSub(_Main) {
        document.getElementById('ParentCategory').value = _Main;
        $('#sub').empty();
        $("#sub").append($('<option></option>').val(null).html("None"))
        $('#op').empty();
        $("#op").append($('<option></option>').val(null).html("None"));
        if (_Main != "") {
            $.ajax(
                {
                    url: "Filter",
                    data: JSON.stringify({ 'filter': _Main }),
                    type: "post",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                       
                        $.each(data, function () {
                            $("#sub").append($('<option></option>').val(this.Text).html(this.Text));
                        });

                    },
                    error: function () {
                        alert("Something went Wrong, Contact Our It support ASAP");
                    }
                });
        }
    }
</script>
<script language="javascript" type="text/javascript">
    function GetOp(_Sub) {
        document.getElementById('ParentCategory').value = ($('#M').val()+","+_Sub)
        $('#op').empty();
        $("#op").append($('<option></option>').val(null).html("None"));
        $.ajax(
            {
                url: "Filter",
                data: JSON.stringify({ 'filter': _Sub }),
                type: "post",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    
                    $.each(data, function () {
                        $("#op").append($('<option></option>').val(this.Text).html(this.Text));
                    });

                },
                error: function () {
                    alert("Something went Wrong, Contact Our It support ASAP");
                }
            });
    }
</script>
<script language="javascript" type="text/javascript">
    function UpdateParent(op) {
        document.getElementById('ParentCategory').value = ($('#M').val() + "," +$('#sub').val()+","+op)

        
    }
</script>
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ParentCategory, new { @id = "ParentCategory" })
    <div class="form-horizontal">
        <h4>Category</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            <div class="col-sm-10">
                @Html.LabelFor(model => model.Name)<br />
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-8">
                @Html.Label("Main Category")<br />
                @Html.DropDownList("CatLst",null,"Main Category",
                new {@id = "M", @class = "form-control", @onchange = "javascript:GetSub(this.value);" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-8">
                @Html.Label("Sub Category")<br/>
                <select id="sub" onchange="javascript:GetOp(this.value);" >
                    <option value="">None</option>
                </select>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-8">
                @Html.Label("Option Category")<br />
                <select id="op" onchange="javascript:UpdateParent(this.value)">
                    <option value="">None</option>
                </select>
            </div>
        </div>

        <div class="form-group">
           
            <div class="col-sm-10">
                @Html.LabelFor(model => model.Description)<br />
                @Html.TextAreaFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Category List", "Index", null, new { @class = "MyLink" })
</div>


